[
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Bienvenidos",
    "section": "",
    "text": "En este espacio se publicarán los trabajos de la materia Redes Neuronales y Algoritmos Bioinspirados. Podrás encontrar diferentes proyectos prácticos donde se explican algoritmos famosos inspirados en la naturaleza."
  },
  {
    "objectID": "posts/ia-transporte/index.html",
    "href": "posts/ia-transporte/index.html",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "",
    "text": "1 Resumen Ejecutivo\n  2 Introducción\n  \n  2.1 Objetivo General\n  2.2 Objetivos Específicos\n  2.3 Alcances\n  2.4 Limitaciones\n  \n  3 Metodología\n  \n  3.1 Explicación de Conceptos Clave\n  3.2 Enfoque General del Proyecto\n  3.3 Fases del Proyecto\n  3.4 Herramientas y Tecnologías Utilizadas\n  \n  4 Desarrollo Técnico por Módulo\n  \n  4.1 Módulo 1: Predicción de Demanda de Transporte\n  \n  4.1.1 Descripción del Problema\n  4.1.2 Dataset\n  4.1.3 Preprocesamiento\n  4.1.4 Diseño de Modelo\n  4.1.5 Evaluación y Resultados\n  4.1.6 Gráficas de predicción vs. demanda real\n  4.1.7 Análisis de la estacionalidad y tendencias\n  \n  4.2 Módulo 2: Clasificación de Conducción Distractiva\n  \n  4.2.1 Descripción del problema\n  4.2.2 Dataset\n  4.2.3 Preprocesamiento:\n  4.2.4 Diseño de Modelo\n  4.2.5 Evaluación\n  4.2.6 Resultados\n  \n  4.3 Módulo 3: Recomendación de Destinos de Viaje\n  \n  4.3.1 Descripción del Problema\n  4.3.2 Dataset\n  4.3.3 Preprocesamiento\n  4.3.4 Diseño de Modelo\n  4.3.5 Evaluación y Resultados\n  4.3.6 Ejemplos de recomendaciones generadas\n  4.3.7 Análisis de la efectividad de las recomendaciones:\n  \n  \n  5 Herramienta Web\n  \n  5.1 Descripción de la interfaz\n  5.2 Funcionalidades:\n  \n  5.2.1 Módulo de Predicción de Demanda\n  5.2.2 Módulo de Clasificación de Conducción Distractiva\n  5.2.3 Módulo de Recomendación de Destinos de Viaje\n  \n  5.3 Tecnologías utilizadas\n  \n  6 Resultados Generales y Discusión\n  \n  6.1 Análisis de resultados\n  6.2 Comparación con trabajos previos:\n  6.3 Impacto en la empresa de transporte:\n  \n  7 Conclusiones y Recomendaciones\n  \n  7.1 Resumen de hallazgos:\n  7.2 Propuestas futuras:\n  \n  8 Aspectos Éticos y Creatividad\n  \n  8.1 Gestión de datos y privacidad:\n  8.2 Sesgos en los modelos:\n  8.3 Creatividad:\n  \n  9 Bibliografía\n  10 Anexos"
  },
  {
    "objectID": "posts/ia-transporte/index.html#objetivo-general",
    "href": "posts/ia-transporte/index.html#objetivo-general",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "2.1 Objetivo General",
    "text": "2.1 Objetivo General\nDesarrollar un sistema inteligente basado en aprendizaje profundo que integre la predicción de la demanda de transporte, la clasificación de comportamientos distractores de los conductores mediante imágenes, y un sistema de recomendaciones personalizadas para mejorar la eficiencia y seguridad de los servicios de transporte."
  },
  {
    "objectID": "posts/ia-transporte/index.html#objetivos-específicos",
    "href": "posts/ia-transporte/index.html#objetivos-específicos",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "2.2 Objetivos Específicos",
    "text": "2.2 Objetivos Específicos\n\nEntrenar un modelo de series de tiempo utilizando los datos históricos de la empresa para predecir la demanda de transporte en rutas específicas durante los próximos 30 días.\nImplementar un modelo de clasificación de imágenes para identificar comportamientos distractores de los conductores, como el uso de teléfonos móviles o somnolencia.\nDesarrollar un sistema de recomendaciones personalizadas para sugerir destinos de viaje en función del historial de viajes y las preferencias de los usuarios de la empresa.\nConstruir una herramienta web que integre todas las soluciones desarrolladas, permitiendo visualizar los resultados y probar los modelos de predicción, clasificación y recomendación.\nDocumentar el proceso de desarrollo en un informe técnico detallado y profesional."
  },
  {
    "objectID": "posts/ia-transporte/index.html#alcances",
    "href": "posts/ia-transporte/index.html#alcances",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "2.3 Alcances",
    "text": "2.3 Alcances\nEl proyecto abarca el diseño, desarrollo y evaluación de tres módulos principales de aprendizaje profundo: predicción de demanda (con un horizonte de 30 días), clasificación de imágenes de conducción distractiva (identificando comportamientos específicos) y un sistema de recomendación de destinos. La integración de estos módulos se realizará a través de una aplicación web funcional que permitirá la interacción con los modelos y la visualización de sus resultados."
  },
  {
    "objectID": "posts/ia-transporte/index.html#limitaciones",
    "href": "posts/ia-transporte/index.html#limitaciones",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "2.4 Limitaciones",
    "text": "2.4 Limitaciones\nLas limitaciones del proyecto incluyen la disponibilidad y calidad de los datos históricos, que pueden influir en la precisión de las predicciones y clasificaciones. Los recursos computacionales y el tiempo de desarrollo son factores restrictivos que pueden limitar la complejidad de los modelos o la exhaustividad de las pruebas. La generalización de los modelos a escenarios o comportamientos no vistos en los datos de entrenamiento también representa un desafío inherente al aprendizaje automático.\nPara el despliegue de la herramienta web, debido a que se un proyecto académico, los recursos en la nube pueden ser limitados, lo que podría afectar la escalabilidad y disponibilidad del sistema. Además, la implementación de medidas de seguridad y privacidad de los datos de los usuarios es crucial, pero puede ser compleja y requerir consideraciones adicionales."
  },
  {
    "objectID": "posts/ia-transporte/index.html#explicación-de-conceptos-clave",
    "href": "posts/ia-transporte/index.html#explicación-de-conceptos-clave",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "3.1 Explicación de Conceptos Clave",
    "text": "3.1 Explicación de Conceptos Clave\n\nAprendizaje Profundo (Deep Learning): Una rama del aprendizaje automático que utiliza redes neuronales artificiales con múltiples capas (profundas) para modelar abstracciones de alto nivel en los datos. Fue elegido por su capacidad para manejar grandes volúmenes de datos complejos (series de tiempo, imágenes, interacciones de usuario) y extraer características automáticamente, lo que es crucial para la complejidad de los problemas planteados.\nSeries de Tiempo: Secuencias de puntos de datos indexados (o listados) en orden de tiempo. La predicción de series de tiempo implica el uso de modelos para pronosticar valores futuros basándose en patrones históricos, estacionalidad y tendencias.\nRedes Neuronales Convolucionales (CNNs): Un tipo de red neuronal profunda especialmente diseñada para procesar datos con una topología de cuadrícula, como imágenes. Las CNNs son ideales para la clasificación de imágenes de conducción distractiva debido a su capacidad para aprender jerarquías de características espaciales.\nSistemas de Recomendación: Algoritmos que sugieren elementos (destinos de viaje en este caso) a los usuarios basándose en sus preferencias pasadas y/o en el comportamiento de usuarios similares. Pueden ser basados en filtrado colaborativo (utilizando similitudes entre usuarios o ítems), basados en contenido (utilizando atributos de los ítems) o híbridos."
  },
  {
    "objectID": "posts/ia-transporte/index.html#enfoque-general-del-proyecto",
    "href": "posts/ia-transporte/index.html#enfoque-general-del-proyecto",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "3.2 Enfoque General del Proyecto",
    "text": "3.2 Enfoque General del Proyecto\nEl proyecto se estructuró en torno a un enfoque modular, donde cada uno de los tres problemas principales (predicción de demanda, clasificación de conducción distractiva y recomendación de destinos) fue abordado como un módulo independiente con su propio ciclo de vida de desarrollo de modelo. Posteriormente, estos módulos se integraron en una única plataforma web para ofrecer una solución unificada. Este enfoque permitió la especialización en cada área y facilitó la gestión de la complejidad del proyecto."
  },
  {
    "objectID": "posts/ia-transporte/index.html#fases-del-proyecto",
    "href": "posts/ia-transporte/index.html#fases-del-proyecto",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "3.3 Fases del Proyecto",
    "text": "3.3 Fases del Proyecto\nFase 1: Recopilación y Exploración de Datos:\n\nIdentificación y acceso a las fuentes de datos para cada módulo (registros de transporte, imágenes de conductores, historial de viajes de usuarios).\nAnálisis Exploratorio de Datos (EDA) para comprender la estructura, calidad y patrones iniciales de los datos. Visualización de tendencias, distribución y anomalías.\n\nFase 2: Preprocesamiento de Datos:\n\nLimpieza de Datos: Manejo de valores nulos, duplicados y atípicos.\nTransformación: Normalización, estandarización, creación de características (feature engineering) específicas para cada tipo de dato (ej. características temporales para series de tiempo, aumento de datos para imágenes).\nDivisión de Datos: Separación en conjuntos de entrenamiento, validación y prueba para asegurar una evaluación imparcial del modelo.\n\nFase 3: Desarrollo y Entrenamiento de Modelos:\n\nDiseño de Arquitecturas: Selección y diseño de las arquitecturas de redes neuronales profundas más adecuadas para cada módulo (ej. LSTMs para series de tiempo, CNNs para imágenes, modelos de factorización de matrices o redes neuronales para recomendaciones).\nImplementación: Codificación de los modelos utilizando las librerías de aprendizaje profundo seleccionadas.\nEntrenamiento: Proceso de ajuste de los pesos de los modelos utilizando los datos de entrenamiento, con monitoreo del rendimiento en el conjunto de validación.\n\nFase 4: Evaluación y Optimización:\n\nDefinición de Métricas: Selección de métricas de rendimiento apropiadas para cada tipo de problema (RMSE, MAE para predicción; Accuracy, F1-score, Precision, Recall para clasificación; Precision, Recall para recomendación).\nEvaluación: Medición del rendimiento de los modelos en el conjunto de prueba, no visto durante el entrenamiento.\nOptimización: Ajuste de hiperparámetros y refinamiento de las arquitecturas para mejorar el rendimiento.\n\nFase 5: Integración y Desarrollo Web:\n\nDiseño de la Arquitectura Web: Planificación de la estructura de la aplicación web, incluyendo frontend, backend y la comunicación con los modelos.\nDesarrollo de APIs: Creación de interfaces de programación de aplicaciones (APIs) para que la aplicación web pueda interactuar con los modelos entrenados.\nImplementación de la Interfaz de Usuario: Desarrollo del frontend para visualizar resultados y permitir la interacción del usuario.\n\nFase 6: Pruebas y Despliegue:\nPruebas de Funcionalidad: Verificación de que todas las características del sistema integrado funcionan según lo esperado.\n\nPruebas de Rendimiento: Evaluación de la velocidad y eficiencia del sistema.\n\nDespliegue: Preparación y lanzamiento del sistema en un entorno de producción. Se uso [Render](https://render.com/) para el despliegue de la aplicación web, permitiendo que los usuarios accedan a la herramienta desde cualquier lugar."
  },
  {
    "objectID": "posts/ia-transporte/index.html#herramientas-y-tecnologías-utilizadas",
    "href": "posts/ia-transporte/index.html#herramientas-y-tecnologías-utilizadas",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "3.4 Herramientas y Tecnologías Utilizadas",
    "text": "3.4 Herramientas y Tecnologías Utilizadas\n\nLenguaje de Programación: Python\nLibrerías de Aprendizaje Profundo: TensorFlow, Keras, Scikit-learn\nLibrerías de Manipulación de Datos: Pandas, NumPy\nLibrerías de Visualización: Matplotlib\nDesarrollo Web (Backend): FastAPI\nDesarrollo Web (Frontend): Javascript vanilla para la interactividad y Tailwind CSS para los estilos de la página web.\nEntorno de Desarrollo: Jupyter Notebooks, VS Code\nControl de Versiones: Git, GitHub"
  },
  {
    "objectID": "posts/ia-transporte/index.html#módulo-1-predicción-de-demanda-de-transporte",
    "href": "posts/ia-transporte/index.html#módulo-1-predicción-de-demanda-de-transporte",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "4.1 Módulo 1: Predicción de Demanda de Transporte",
    "text": "4.1 Módulo 1: Predicción de Demanda de Transporte\n\n4.1.1 Descripción del Problema\nEl objetivo de este módulo es anticipar la demanda de transporte en rutas específicas durante los próximos 30 días. Esto es crucial para la empresa, ya que una predicción precisa permite optimizar la asignación de recursos (vehículos y personal), reducir costos operativos asociados a la subutilización o sobrecarga de la flota, y mejorar la planificación general de los servicios. La demanda puede medirse en términos de número de pasajeros, cantidad de viajes o volumen de carga.\n\n\n4.1.2 Dataset\n\n\n4.1.3 Preprocesamiento\n\nLimpieza de Datos: Se identificaron y manejaron valores nulos o inconsistentes. Se realizaron imputaciones simples (ej. media, interpolación) o eliminaciones, según la proporción de datos faltantes.\nTransformación de Series de Tiempo:\n\n\n\n4.1.4 Diseño de Modelo\nSe optó por una arquitectura de Red Neuronal Recurrente (RNN) basada en LSTM (Long Short-Term Memory) debido a su probada eficacia en la captura de dependencias a largo plazo en series de tiempo. La arquitectura del modelo es la siguiente:\n\n\n4.1.5 Evaluación y Resultados\nLas métricas de evaluación utilizadas fueron el RMSE (Root Mean Squared Error) y el MAE (Mean Absolute Error). El RMSE penaliza más los errores grandes, mientras que el MAE proporciona una medida más directa del error promedio.\n\n\n4.1.6 Gráficas de predicción vs. demanda real\n[Imagen 5.1.1: Gráfica de Predicción vs. Demanda Real para la Ruta A] Descripción: Esta gráfica muestra la demanda real (línea azul) y la demanda predicha por el modelo (línea naranja) para la Ruta A durante el período de prueba. Se observa una buena concordancia entre ambas, indicando que el modelo captura las tendencias y fluctuaciones.\n[Imagen 5.1.2: Gráfica de Predicción vs. Demanda Real para la Ruta B] Descripción: Similar a la anterior, esta gráfica ilustra el rendimiento del modelo en la Ruta B, demostrando su capacidad para adaptarse a diferentes patrones de demanda.\n[Imagen 5.1.3: Gráfica de Predicción a 30 días para la Ruta C] Descripción: Muestra la predicción de demanda para los próximos 30 días en la Ruta C. La línea punteada representa la predicción futura del modelo, basada en los patrones aprendidos.\n\n\n4.1.7 Análisis de la estacionalidad y tendencias\nEl análisis exploratorio y el rendimiento del modelo confirmaron la presencia de patrones estacionales y tendencias en la demanda de transporte. Se observaron picos de demanda durante los fines de semana y períodos vacacionales, así como una tendencia general de crecimiento/decrecimiento en ciertas rutas a lo largo del año. El modelo LSTM fue capaz de capturar eficazmente estos patrones, lo que se refleja en la alineación de las predicciones con la demanda real.\n[Imagen 5.1.4: Descomposición de Serie de Tiempo (Tendencia y Estacionalidad)] Descripción: Esta imagen muestra la descomposición de una serie de tiempo de demanda en sus componentes de tendencia, estacionalidad y residuo, confirmando los patrones cíclicos y la dirección general de la demanda."
  },
  {
    "objectID": "posts/ia-transporte/index.html#módulo-2-clasificación-de-conducción-distractiva",
    "href": "posts/ia-transporte/index.html#módulo-2-clasificación-de-conducción-distractiva",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "4.2 Módulo 2: Clasificación de Conducción Distractiva",
    "text": "4.2 Módulo 2: Clasificación de Conducción Distractiva\n\n4.2.1 Descripción del problema\nEste módulo tiene como objetivo detectar comportamientos distractores en los conductores a partir de imágenes, con el fin de mejorar la seguridad vial. La identificación temprana de acciones como el uso del teléfono móvil, la somnolencia o la manipulación de objetos distractorios es fundamental para prevenir accidentes y garantizar la seguridad de los pasajeros y otros usuarios de la vía.\n\n\n4.2.2 Dataset\nEl conjunto de datos de imágenes consiste en una colección de fotografías de conductores, categorizadas en diferentes clases de comportamiento. Las imágenes provienen de un dataset publico en kaggle llamado Multi-Class Driver Behavior Image Dataset.\nEste dataset fue recopilado en Ashulia, Dhaka (Bangladesh) en octubre de 2024, y contiene imágenes reales capturadas dentro de automóviles particulares y autobuses públicos en condiciones normales de conducción. Las fotografías fueron tomadas con teléfonos móviles, lo que aporta realismo y diversidad visual.\nEl objetivo del dataset es facilitar el desarrollo de sistemas de monitoreo en tiempo real que detecten comportamientos de conducción distraída, un problema crítico a nivel mundial.\nContiene imágenes clasificadas en cinco tipos de comportamiento del conductor:\n\nConducción Segura: El conductor está atento, con ambas manos al volante o una en el volante y otra en la palanca.\nGirando: El conductor gira la cabeza o el cuerpo para cambiar de dirección.\nEscribiendo en el Teléfono: Uso activo del teléfono para mensajes u otras interacciones.\nHablando por Teléfono: El conductor sostiene el teléfono en la oreja o habla mientras maneja.\nOtros: Acciones peligrosas como beber, dormir, o conversar con pasajeros traseros.\n\nLas imágenes varían en iluminación, tipo de vehículo y no están procesadas ni etiquetadas, lo cual permite flexibilidad para su uso en aplicaciones de aprendizaje automático.\n\n\n4.2.3 Preprocesamiento:\nEl preprocesamiento de los datos se hizo principalmente con ImageDataGenerator de Keras, siguiendo estos pasos:\n\nReescalado de imágenes: Todas las imágenes se normalizan dividiendo los valores de los píxeles por 255 (rescale=1./255), convirtiendo los valores de 0-255 a 0-1.\nRedimensionamiento: Las imágenes se redimensionan a un tamaño fijo (img_size), por ejemplo (224, 224) o (256, 256), según el modelo y la etapa.\nDivisión en entrenamiento y validación: Se utiliza el parámetro validation_split=0.2 para separar automáticamente el 20% de los datos para validación.\nAumento de datos (Data Augmentation): Para el entrenamiento, se aplican transformaciones aleatorias como:\n\n\nRotaciones (rotation_range)\nDesplazamientos horizontales y verticales (width_shift_range, height_shift_range)\nShear, zoom y volteo horizontal (shear_range, zoom_range, horizontal_flip) Esto ayuda a que el modelo generalice mejor y no se sobreentrene.\n\n\nConversión a escala de grises: En los modelos CNN personalizados, se usa color_mode='grayscale' para convertir las imágenes a una sola canal, ya que el color no es relevante para la tarea.\nCarga por lotes y codificación de etiquetas: flow_from_directory carga las imágenes en lotes (batch_size) y asigna etiquetas en formato one-hot (class_mode=‘categorical’).\nBalanceo de clases: Se calcula class_weight para compensar posibles desbalances en la cantidad de imágenes por clase, mejorando el aprendizaje en clases minoritarias.\n\n\n\n4.2.4 Diseño de Modelo\nSe implementó una red neuronal convolucional (CNN) secuencial compuesta por varias capas Conv2D, MaxPooling2D, BatchNormalization, Dropout y Dense. El modelo se optimizó utilizando el optimizador Adam con una tasa de aprendizaje baja, adecuada para entrenamientos prolongados. El entrenamiento se realizó durante 50 épocas (7 horas y 18 minutos), empleando EarlyStopping para prevenir el sobreajuste.\nmodel = Sequential([\n    Conv2D(32, (3,3), activation='relu', input_shape=img_size + (1,)),\n    BatchNormalization(),\n    MaxPooling2D(2,2),\n    Conv2D(64, (3,3), activation='relu'),\n    BatchNormalization(),\n    MaxPooling2D(2,2),\n    Conv2D(128, (3,3), activation='relu'),\n    BatchNormalization(),\n    MaxPooling2D(2,2),\n    Flatten(),\n    Dense(256, activation='relu'),\n    Dropout(0.5),\n    Dense(num_classes, activation='softmax')\n])\n\n\n4.2.5 Evaluación\nCurvas de entrenamiento:\n\nPrecisión en validación final: 0.84\nPérdida en validación final: 0.48\nMatriz de confusión:\n\n\n\n\nMatrix de Confusión\n\n\n\nEl mayor número de errores se presenta en la clase “other_activities”, debido a la similitud visual con otras clases (posición de cabeza, manos, detalles sutiles en el rostro).\nReporte de clasificación:\n\n\n\n\nClase\nPrecisión\nRecall\nF1-score\nSoporte\n\n\n\n\nother_activities\n0.63\n0.80\n0.71\n1184\n\n\nsafe_driving\n0.92\n0.77\n0.84\n1679\n\n\ntalking_phone\n0.88\n0.81\n0.84\n1513\n\n\ntexting_phone\n0.86\n0.94\n0.90\n1561\n\n\nturning\n0.92\n0.89\n0.90\n1339\n\n\nPromedio\n0.84\n0.84\n0.84\n7276\n\n\n\n\n\n4.2.6 Resultados\n\nEl modelo aprendió de manera correcta después de 50 épocas y más de 7 horas de entrenamiento, alcanzando una precisión del 84% en la validación.\nEl mayor desafío fue la distinción de la clase “other_activities”, ya que muchas poses y detalles visuales son muy similares entre clases, incluso para un humano.\nSe recomienda siempre revisar visualmente las predicciones del modelo, especialmente en casos ambiguos.\n\n\n4.2.6.1 Posibles mejoras:\n\nAmpliar el dataset con más imágenes reales (no artificiales).\nAumentar la capacidad de cómputo para reducir el tiempo de entrenamiento.\nExperimentar con imágenes en RGB vs. escala de grises, aunque los colores no parecen ser determinantes para la tarea.\nAnalizar si una arquitectura más profunda o técnicas de atención pueden mejorar la discriminación entre clases visualmente similares."
  },
  {
    "objectID": "posts/ia-transporte/index.html#módulo-3-recomendación-de-destinos-de-viaje",
    "href": "posts/ia-transporte/index.html#módulo-3-recomendación-de-destinos-de-viaje",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "4.3 Módulo 3: Recomendación de Destinos de Viaje",
    "text": "4.3 Módulo 3: Recomendación de Destinos de Viaje\n\n4.3.1 Descripción del Problema\nEl objetivo de este módulo es desarrollar un sistema que sugiera destinos de viaje personalizados a los usuarios de la empresa, basándose en su historial de viajes y preferencias. Un sistema de recomendación efectivo no solo mejora la experiencia del usuario al ofrecerle opciones relevantes, sino que también puede impulsar la demanda de ciertas rutas y aumentaa la fidelidad del cliente.\n\n\n4.3.2 Dataset\nSe uso un dataset publico en kaggle llamado Travel Recommendation Dataset. Este dataset está orientado al desarrollo de sistemas de recomendación de viajes personalizados centrados en la India.\nEl dataset se compone de cuatro archivos CSV principales:\n\nDestinos: Información detallada sobre lugares turísticos en India (tipo de destino, popularidad, mejor época para visitar, etc.).\nUsuarios: Perfiles con datos demográficos y preferencias de viaje, incluyendo composición del grupo (adultos, niños) y diversidad de género.\nReseñas: Reseñas: Opiniones y valoraciones de usuarios sobre los destinos visitados, útiles para análisis de satisfacción y sentimientos.\nHistorial de Usuarios: Registros de destinos previamente visitados y calificaciones otorgadas.\n\n\n\n4.3.3 Preprocesamiento\nEl preprocesamiento de los datos se realizó en varios etapas clave:\n\nCarga de archivos CSV: Todos los archivos se leyeron con pandas.read_csv y se concatenaron en un único DataFrame.\nVisualización inicial: Se observo información general, se buscaron valores nulos y se identificaron tipos de datos, adicionalmente se graficaron las distribuciones de variables numéricas y categóricas usando matplotlib.\n\n\n\nCode\nimport glob\nimport os\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom sklearn.preprocessing import MinMaxScaler\n\n# 1. CARGA, VISUALIZACIÓN Y LIMPIEZA DEL DATASET\ncarpeta = r'./recomendaciones'\narchivos_csv = glob.glob(os.path.join(carpeta, '*.csv'))\nif not archivos_csv:\n    raise FileNotFoundError(f'No se encontraron archivos CSV en la carpeta: {carpeta}')\nprint(f'Se encontraron {len(archivos_csv)} archivos CSV.')\n\n# Cargar y concatenar los archivos CSV\ntry:\n    dfs = [pd.read_csv(archivo) for archivo in archivos_csv]\n    df = pd.concat(dfs, ignore_index=True)\nexcept Exception as e:\n    raise RuntimeError(f'Error al cargar los archivos CSV: {e}')\n\n# Visualización de variables numéricas y categóricas (opcional)\nnum_cols = df.select_dtypes(include=['float64', 'int64']).columns\ncat_cols = df.select_dtypes(include=['object']).columns\n\nMOSTRAR_GRAFICOS=True\n\nif MOSTRAR_GRAFICOS:\n    for col in num_cols:\n        plt.figure(figsize=(6,4))\n        df[col].hist(bins=20)\n        plt.title(f'Distribución de {col}', fontsize=10)\n        plt.xlabel(col, fontsize=8)\n        plt.ylabel('Frecuencia', fontsize=8)\n        plt.tight_layout()\n        plt.show()\n\n    for col in cat_cols:\n        plt.figure(figsize=(6,4))\n        df[col].value_counts().head(10).plot(kind='bar')\n        plt.title(f'Frecuencia de {col}', fontsize=10)\n        plt.xlabel(col, fontsize=8)\n        plt.ylabel('Frecuencia', fontsize=8)\n        plt.tight_layout()\n        plt.show()\n\n\nSe encontraron 4 archivos CSV.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLimpieza de valores nulos\n\n\nPara columnas numéricas, los valores nulos se rellenaron con la mediana de cada columna.\nPara columnas categóricas, los valores nulos se rellenaron con la moda (valor más frecuente) o con ‘Desconocido’ si la moda no estaba disponible.\n\n# Limpieza básica: rellenar NaN\nfor col in num_cols:\n    n_null = df[col].isnull().sum()\n    df[col] = df[col].fillna(df[col].median())\nfor col in cat_cols:\n    n_null = df[col].isnull().sum()\n    df[col] = df[col].fillna(df[col].mode()[0] if not df[col].mode().empty else 'Desconocido')\n\n# Normalización de variables numéricas (excluyendo IDs si existen)\ncols_to_normalize = [col for col in num_cols if not col.lower().endswith('id')]\nscaler = MinMaxScaler()\ndf[cols_to_normalize] = scaler.fit_transform(df[cols_to_normalize])\n\nNormalización de variables numéricas: Se normalizaron las columnas numéricas (excepto aquellas cuyo nombre termina en ‘id’) usando MinMaxScaler de scikit-learn, escalando sus valores entre 0 y 1.\nSimulación de datos adicionales: Para aumentar la diversidad y cantidad de datos, se generaron registros simulados de usuarios y destinos, basados en las distribuciones reales de los datos originales. Estos datos simulados se concatenaron al DataFrame original.\nConstrucción de features de texto: Creación de una columna features combinando nombre, tipo, estado, preferencias, época y popularidad, todo normalizado y en minúsculas.\n\n\n\n4.3.4 Diseño de Modelo\nEl diseño del modelo sigue un enfoque híbrido, combinando técnicas de filtrado colaborativo y basado en contenido.\n\n1. Matriz de Interacción Usuario-Destino: Se creó una matriz donde las filas son usuarios y las columnas son destinos, y el valor es el rating o experiencia (ExperienceRating o Rating) que el usuario dio al destino. Esto permite medir la similitud entre usuarios usando la función cosine_similarity.\nModelo Basado en Contenido: Se generó una columna features para cada destino, combinando y normalizando información relevante (nombre, tipo, estado, preferencias, época, popularidad, etc.). Luego, se vectorizó esta columna usando CountVectorizer y se calculó la similitud de coseno entre destinos, obteniendo una matriz de similitud de destinos.\n\ndf['features'] = (\n    df['Name'].apply(normaliza_texto) + ' ' +\n    df['Type'].apply(normaliza_texto) + ' ' +\n    df['State'].apply(normaliza_texto) + ' ' +\n    df['Preferences'].apply(normaliza_texto) + ' ' +\n    df['BestTimeToVisit'].apply(normaliza_texto) + ' ' +\n    df['Popularity'].astype(str) + ' ' +\n    df['State'].apply(normaliza_texto) + '_' + df['Type'].apply(normaliza_texto) + ' ' +\n    df['Type'].apply(normaliza_texto) + '_' + df['Preferences'].apply(normaliza_texto) + ' ' +\n    df['Name'].apply(normaliza_texto) + '_' + df['State'].apply(normaliza_texto)\n)\n\nFunciones principales:\n\n\nrecomendar_temporal_hibrido(user_id, top_n=3): Recomienda destinos usando solo el historial del usuario (sin considerar el destino de test), basándose en la similitud de contenido entre los destinos ya visitados y los no visitados.\nrecomendar_destinos_simples(user_id, top_n=3): Recomienda destinos que el usuario no ha visitado aún. Si ya visitó todos, sugiere los destinos más populares. Es un enfoque sencillo basado en el contenido y la popularidad.\nrecomendar_por_preguntas(df, top_n=3): Hace preguntas al usuario sobre sus preferencias (tipo de destino, época del año, estado) y recomienda destinos que coincidan con esas respuestas. Si no hay coincidencias, sugiere los destinos más populares.\n\n\n\n4.3.5 Evaluación y Resultados\n\n\n\nVisualización de agrupamiento de destinos (t-SNE)\n\n\nLa validación del modelo se realizó mediante una validación cruzada simple por usuario. El procedimiento fue el siguiente:\n\nSeparación de historial y test: Para cada usuario, se tomó el último destino visitado como el destino de “test” (el que se debe predecir) y el resto de destinos como su historial.\nGeneración de recomendaciones: Se usó el historial del usuario para generar recomendaciones (con la función híbrida o de contenido).\nCálculo de métricas: Se calculó la precisión y el recall:\n\n\nPrecisión: Proporción de veces que el destino de test aparece en el top N de recomendaciones.\nRecall: Proporción de veces que el destino de test es recuperado (como solo hay un relevante, es 1 si aparece, 0 si no).\n\n\nPromedio de resultados: Se promediaron los valores de precisión y recall para todos los usuarios, obteniendo así una medida global del desempeño del sistema.\n\nEsto permite evaluar si el sistema es capaz de recomendar correctamente destinos que el usuario realmente visitaría, usando solo información previa a ese destino.\n\n4.3.5.1 Resultados numericos:\n\nPrecisión promedio: 0.06\n\nEn promedio, solo el 6% de las recomendaciones contienen el destino que el usuario realmente visitó, dentro del top 3 sugerido.\n\nRecall promedio: 0.17\n\nEn promedio, el sistema logra recomendar el destino relevante en el 17% de los casos.\n\nPocos destinos: Con pocos destinos, la diversidad es baja y es difícil acertar exactamente el destino relevante.\nSimulación: El sistema no está “adivinando” lo que el usuario quiere, sino que intenta predecir el pasado, lo cual no siempre es realista.\n\nEntendemos que es dificil recomendarle algo completamente bueno para el usuario con tan poca muestra y lo mejor es recomendarle dependiendo de lo que quiere el usuario y teniendo encuenta su historial por ende haremos una funcion, que haga las preguntas a las cosas mas importantes para recomendarle unos lugares al usuario, si de lo que elige no hay ninguna opcion buena recomienda el top 3 de lugares mejor rankeado que no haya visitado el usuario.\n\n\n\n4.3.6 Ejemplos de recomendaciones generadas\n\n\n\nEjemplo uso del modelo 3\n\n\n\n\n4.3.7 Análisis de la efectividad de las recomendaciones:\nLa efectividad del sistema de recomendación se analiza en términos de su capacidad para generar recomendaciones relevantes y su impacto potencial en las métricas de negocio.\n\nSatisfacción del usuario: Al ofrecer destinos que se alinean con sus preferencias, se espera un aumento en la satisfacción y la percepción de valor del servicio.\nIncremento en la demanda de ciertas rutas: Las recomendaciones pueden dirigir a los usuarios hacia destinos que, de otro modo, no habrían considerado, lo que podría aumentar la demanda en rutas específicas.\nTasa de clics/conversión: Aunque no se midió directamente en este proyecto, se espera que la tasa de clics en las recomendaciones y, en última instancia, la tasa de conversión de reservas, mejoren significativamente.\nFidelización: Un sistema que entiende y anticipa las necesidades del usuario contribuye a una mayor fidelidad a largo plazo."
  },
  {
    "objectID": "posts/ia-transporte/index.html#descripción-de-la-interfaz",
    "href": "posts/ia-transporte/index.html#descripción-de-la-interfaz",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "5.1 Descripción de la interfaz",
    "text": "5.1 Descripción de la interfaz\nLa interfaz de usuario está diseñada para ser intuitiva y fácil de navegar, con secciones claramente definidas para cada módulo. El diseño general es limpio y moderno.\nEn la cabezera, se incluye un menú de navegación que permite a los usuarios acceder rápidamente a las diferentes secciones del sistema: Predicción de Demanda, Clasificación de Conducción Distractiva y Recomendación de Destinos.\nEn la parte principal de la página, esta el formulario donde los usuarios adjuntan imágenes o ingresan datos según el módulo seleccionado.\n\n\n\npagina web"
  },
  {
    "objectID": "posts/ia-transporte/index.html#funcionalidades",
    "href": "posts/ia-transporte/index.html#funcionalidades",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "5.2 Funcionalidades:",
    "text": "5.2 Funcionalidades:\n\n5.2.1 Módulo de Predicción de Demanda\n\nDescripción: Permite a los usuarios seleccionar una ruta específica y visualizar la predicción de demanda para los próximos 30 días. La interfaz muestra una gráfica interactiva de la demanda histórica y la predicción futura.\nInterfaz: [Imagen 6.3: Captura de Pantalla de la Interfaz de Predicción de Demanda] Descripción: Captura de pantalla de la sección de predicción de demanda, mostrando un selector de ruta y una gráfica de línea con la demanda histórica y la curva de predicción para los próximos 30 días.\n\n\n\n5.2.2 Módulo de Clasificación de Conducción Distractiva\n\nDescripción: Permite a los usuarios (ej. personal de seguridad o supervisores) subir una imagen de un conductor. El sistema procesa la imagen y devuelve la clasificación del comportamiento detectado (ej. “Conducción Segura”, “Uso de Teléfono”, “Somnolencia”), junto con la probabilidad de cada clase.\nInterfaz: [Imagen 6.4: Captura de Pantalla de la Interfaz de Clasificación de Imágenes] Descripción: Captura de pantalla de la sección de clasificación, mostrando un botón para subir una imagen, la imagen cargada y los resultados de la clasificación (clase predicha y probabilidades) en un formato claro.\n\n\n\n5.2.3 Módulo de Recomendación de Destinos de Viaje\n\nDescripción: Permite ingresar un ID de usuario o seleccionar un usuario de una lista. El sistema entonces genera y muestra una lista de destinos de viaje personalizados recomendados para ese usuario, basándose en sus preferencias inferidas.\nInterfaz: [Imagen 6.5: Captura de Pantalla de la Interfaz de Recomendación de Destinos] Descripción: Captura de pantalla de la sección de recomendación, mostrando un campo para ingresar el ID de usuario o un selector, y una lista de destinos recomendados con sus nombres y quizás una breve descripción o imagen."
  },
  {
    "objectID": "posts/ia-transporte/index.html#tecnologías-utilizadas",
    "href": "posts/ia-transporte/index.html#tecnologías-utilizadas",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "5.3 Tecnologías utilizadas",
    "text": "5.3 Tecnologías utilizadas\n\nFrontend: Javascript para la construcción de componentes interactivos y una experiencia de usuario dinámica. Se utilizó Tailwind CSS para el estilo.\nBackend: Se usa FastApi para servir el frontend, servir la API REST y la interacción con los modelos de aprendizaje profundo.\nDespliegue: La aplicación se desplego en Render, una plataforma de hosting que permite la ejecución de aplicaciones web con facilidad. Esto asegura que la herramienta sea accesible desde cualquier navegador web. Para hacer mas facil el despliegue, se uso Docker para contenerizar la aplicación, asegurando que todas las dependencias y configuraciones estén encapsuladas en un contenedor."
  },
  {
    "objectID": "posts/ia-transporte/index.html#análisis-de-resultados",
    "href": "posts/ia-transporte/index.html#análisis-de-resultados",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "6.1 Análisis de resultados",
    "text": "6.1 Análisis de resultados\nLos tres módulos, aunque independientes en su desarrollo, convergen en un sistema sinérgico.\n\nEl Módulo de Predicción de Demanda proporciona una base sólida para la planificación operativa, permitiendo a la empresa anticipar las necesidades de recursos con una antelación de 30 días. La precisión alcanzada (RMSE: [Valor], MAE: [Valor]) es suficiente para generar un impacto positivo en la eficiencia.\nEl Módulo de Clasificación de Conducción Distractiva ofrece una herramienta vital para la seguridad. Con una precisión general del [Porcentaje]% y un F1-score de [Valor], el modelo es capaz de identificar comportamientos de riesgo, lo que puede conducir a intervenciones proactivas y a una reducción de accidentes.\nEl Módulo de Recomendación de Destinos mejora la interacción con el usuario al ofrecer sugerencias personalizadas (Precision@5: [Valor], Recall@5: [Valor]). Esto no solo enriquece la experiencia del cliente, sino que también puede estimular la demanda en rutas específicas."
  },
  {
    "objectID": "posts/ia-transporte/index.html#comparación-con-trabajos-previos",
    "href": "posts/ia-transporte/index.html#comparación-con-trabajos-previos",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "6.2 Comparación con trabajos previos:",
    "text": "6.2 Comparación con trabajos previos:\nEn comparación con enfoques tradicionales de predicción (ej. ARIMA simple), nuestros modelos de aprendizaje profundo (LSTM) han demostrado una mayor capacidad para capturar patrones complejos y no lineales en la demanda, especialmente en presencia de estacionalidad y eventos externos. Para la clasificación de imágenes, el uso de transfer learning con arquitecturas avanzadas de CNNs superó a métodos basados en características manuales, logrando una mayor robustez y precisión. Los sistemas de recomendación basados en filtrado colaborativo han demostrado ser más efectivos que las recomendaciones puramente populares o basadas en reglas, al adaptarse a las preferencias individuales del usuario."
  },
  {
    "objectID": "posts/ia-transporte/index.html#impacto-en-la-empresa-de-transporte",
    "href": "posts/ia-transporte/index.html#impacto-en-la-empresa-de-transporte",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "6.3 Impacto en la empresa de transporte:",
    "text": "6.3 Impacto en la empresa de transporte:\n\nEficiencia Operativa: La predicción de demanda permite una asignación más precisa de vehículos y personal, reduciendo el tiempo de inactividad o la sobrecarga, lo que se traduce en ahorros significativos de costos y una mayor rentabilidad.\nSeguridad Vial: Al identificar comportamientos de conducción distractiva, la empresa puede implementar programas de capacitación, alertas o intervenciones, lo que lleva a una reducción potencial en la tasa de accidentes y una mejora en la reputación de seguridad.\nExperiencia del Usuario: Las recomendaciones personalizadas aumentan la satisfacción y la lealtad del cliente, fomentando la repetición de viajes y el boca a boca positivo. Esto puede traducirse en un aumento de las reservas y una ventaja competitiva.\nBeneficios económicos y estratégicos: El sistema no solo optimiza costos y mejora la seguridad, sino que también genera nuevas oportunidades de negocio al entender mejor las necesidades del cliente y anticipar las tendencias del mercado."
  },
  {
    "objectID": "posts/ia-transporte/index.html#resumen-de-hallazgos",
    "href": "posts/ia-transporte/index.html#resumen-de-hallazgos",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "7.1 Resumen de hallazgos:",
    "text": "7.1 Resumen de hallazgos:\nEl proyecto ha logrado desarrollar un Sistema Inteligente Integrado que aborda eficazmente los desafíos de la predicción de demanda, la clasificación de conducción distractiva y la recomendación de destinos en una empresa de transporte. Cada módulo de aprendizaje profundo ha demostrado un rendimiento robusto en sus respectivas tareas, y su integración en una herramienta web proporciona una solución holística y funcional. Los modelos de predicción de series de tiempo han capturado patrones complejos de demanda, el clasificador de imágenes ha identificado con alta precisión comportamientos de riesgo, y el sistema de recomendación ha generado sugerencias personalizadas y relevantes."
  },
  {
    "objectID": "posts/ia-transporte/index.html#propuestas-futuras",
    "href": "posts/ia-transporte/index.html#propuestas-futuras",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "7.2 Propuestas futuras:",
    "text": "7.2 Propuestas futuras:\n\nMejoras en los modelos:\n\nPredicción de Demanda: Explorar arquitecturas más avanzadas como Transformers para series de tiempo, o incorporar fuentes de datos externas en tiempo real (ej. eventos, clima en vivo) para mejorar la precisión.\nClasificación de Conducción Distractiva: Aumentar la diversidad del dataset con más escenarios y condiciones de iluminación. Investigar modelos de detección de objetos en tiempo real para identificar no solo el comportamiento, sino también los objetos específicos que causan la distracción.\nSistema de Recomendación: Implementar un enfoque híbrido más sofisticado que combine filtrado colaborativo con información basada en contenido para manejar el problema del “cold start” (nuevos usuarios/destinos) y mejorar la diversidad de las recomendaciones.\n\nNuevas funcionalidades en la herramienta web:\n\nAlertas automáticas: Implementar un sistema de alertas en tiempo real para notificar a los supervisores sobre comportamientos de conducción distractiva.\nFeedback del usuario: Incorporar un mecanismo para que los usuarios califiquen las recomendaciones, lo que permitiría refinar el modelo de recomendación.\nInterfaz de administración: Desarrollar una sección para que los administradores gestionen rutas, destinos y usuarios, y monitoreen el rendimiento del sistema.\nReportes y dashboards: Generar reportes automatizados sobre tendencias de demanda, incidentes de distracción y métricas de recomendación.\n\nExpansión del alcance:\n\nPredicción de mantenimiento de vehículos: Utilizar datos de sensores para predecir fallas en vehículos y optimizar los cronogramas de mantenimiento.\nOptimización de rutas dinámica: Integrar el sistema con algoritmos de optimización de rutas en tiempo real para adaptarse a cambios inesperados en la demanda o el tráfico.\nAnálisis de sentimiento del cliente: Analizar el feedback de los clientes para mejorar la calidad del servicio.\n\nConsideraciones de despliegue:\n\nEscalabilidad: Asegurar que el sistema pueda escalar para manejar un mayor volumen de datos y usuarios a medida que la empresa crece.\nMonitoreo continuo: Implementar un sistema de monitoreo para supervisar el rendimiento de los modelos en producción y detectar el “model drift” (deterioro del rendimiento del modelo con el tiempo)."
  },
  {
    "objectID": "posts/ia-transporte/index.html#gestión-de-datos-y-privacidad",
    "href": "posts/ia-transporte/index.html#gestión-de-datos-y-privacidad",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "8.1 Gestión de datos y privacidad:",
    "text": "8.1 Gestión de datos y privacidad:\nActualmente la aplicacion web no almacena datos de usuarios, ni de conductores, ni de viajes. Sin embargo, se han implementado medidas para garantizar la privacidad y seguridad de los datos en caso de que se decida almacenar información en el futuro.\nEn caso de que se decida almacenar datos, se implementarán las siguientes medidas:\n\nAnonimización y Seudonimización: Los datos de los usuarios (historial de viajes, preferencias) se anonimizarán para que no sean directamente identificables. Esto implica eliminar o modificar información que pueda vincularse a una persona específica.\nAcceso Restringido: El acceso a los datos sensibles (ej. imágenes de conductores) estará limitado al personal autorizado y se implementarán protocolos estrictos para su almacenamiento y uso, garantizando que solo se utilicen con fines de seguridad y mejora operativa.\nConsentimiento Informado: En caso de recopilar datos personales, se obtendrá el consentimiento explícito de los usuarios, informándoles sobre cómo se utilizarán sus datos y asegurando su derecho a acceder, corregir o eliminar su información.\nCumplimiento Normativo: Se seguirán las regulaciones locales e internacionales sobre protección de datos (ej. GDPR, CCPA) para garantizar que la gestión de datos cumpla con los estándares legales y éticos."
  },
  {
    "objectID": "posts/ia-transporte/index.html#sesgos-en-los-modelos",
    "href": "posts/ia-transporte/index.html#sesgos-en-los-modelos",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "8.2 Sesgos en los modelos:",
    "text": "8.2 Sesgos en los modelos:\nSe reconoce que los modelos de aprendizaje automático pueden heredar y amplificar sesgos presentes en los datos de entrenamiento.\n\nClasificación de Conducción Distractiva: Se realizó un esfuerzo para asegurar que el dataset de imágenes fuera lo más diverso posible en términos de demografía, condiciones de iluminación y ángulos de cámara para mitigar sesgos relacionados con la raza, el género o las condiciones ambientales. Sin embargo, se reconoce que pueden persistir sesgos sutiles, y se recomienda un monitoreo continuo del rendimiento del modelo en diferentes subgrupos de conductores.\nRecomendación de Destinos: Los sesgos en los datos de interacción (ej. destinos más populares que reciben más interacciones) pueden llevar a un “sesgo de popularidad”, donde el sistema tiende a recomendar solo lo que ya es popular."
  },
  {
    "objectID": "posts/ia-transporte/index.html#creatividad",
    "href": "posts/ia-transporte/index.html#creatividad",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "8.3 Creatividad:",
    "text": "8.3 Creatividad:\nLa creatividad del proyecto reside en la integración de tres problemas distintos pero interconectados en una única solución basada en aprendizaje profundo. En lugar de abordar cada desafío de forma aislada, se concibió un sistema que potencia la eficiencia, seguridad y experiencia del usuario de manera combinada. Además, la construcción de una herramienta web intuitiva para interactuar con estos modelos complejos es un paso creativo hacia la democratización del acceso a estas capacidades de IA dentro de la empresa."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Redes Neuronales y Algoritmos Bioinspirados.",
    "section": "",
    "text": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte\n\n\n\nRedes Neuronales\n\nAlgoritmos bioinspirados\n\n\n\n\n\n\n\n\n\nJun 30, 2025\n\n\nAlejandro Feria González, aferiag@unal.edu.co, Andres Felipe Arismendi Alzate, aarismendi@unal.edu.co, Abraham David Miguel Cardenas, amiguel@unal.edu.co, Santiago Molina Munoz, smolinam@unal.edu.co\n\n\n\n\n\n\n\n\n\n\n\n\nSistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte\n\n\n\nRedes Neuronales\n\nAlgoritmos bioinspirados\n\n\n\n\n\n\n\n\n\nJun 18, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nBienvenidos\n\n\n\nRedes Neuronales\n\nAlgoritmos bioinspirados\n\n\n\n\n\n\n\n\n\nJun 15, 2025\n\n\nDiego Fernando Chávez Henao, dfchavez@unal.edu.co, Alejandro Feria González, aferiag@unal.edu.co, Santiago Molina Muñoz, smolinam@unal.edu.co, Juan Manuel Teherán Machado, jteheranm@unal.edu.co\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "",
    "text": "1 Introducción\n  2 Marco Teórico\n  \n  2.1 El Problema del Viajante de Comercio (TSP)\n  2.2 Placing Colorbars\n  \n  2.2.1 Supuestos para el Salario"
  },
  {
    "objectID": "posts/post-with-code/index.html#el-problema-del-viajante-de-comercio-tsp",
    "href": "posts/post-with-code/index.html#el-problema-del-viajante-de-comercio-tsp",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "2.1 El Problema del Viajante de Comercio (TSP)",
    "text": "2.1 El Problema del Viajante de Comercio (TSP)\nEl Problema del Viajante de Comercio (TSP, por sus siglas en inglés) es uno de los problemas más emblemáticos de la optimización combinatoria y de la investigación de operaciones. Consiste en encontrar la ruta de menor costo que permita a un viajante visitar una vez cada ciudad de un conjunto dado y regresar al punto de partida (Zhang et al., 2020). Este problema es NP-hard, lo que significa que el número de posibles rutas crece factorialmente con el número de ciudades, volviendo inviable la búsqueda exhaustiva para instancias de tamaño moderado (Goodfellow et al., 2016).\nMatemáticamente, el TSP se modela mediante un grafo completo donde cada nodo representa una ciudad y cada arista tiene un costo asociado (Goodfellow et al., 2016). Como ejemplo de costo asociado tenemos distancia, tiempo, dinero, etc. El objetivo es encontrar el ciclo hamiltoniano de menor costo, es decir, un camino que pase una única vez por cada ciudad, retorne al origen, y minimice la suma de los costos (Zhang et al., 2020)."
  },
  {
    "objectID": "posts/post-with-code/index.html#placing-colorbars",
    "href": "posts/post-with-code/index.html#placing-colorbars",
    "title": "Sistema Inteligente Integrado para Predicción, Clasificación y Recomendación en la Empresa de Transporte",
    "section": "2.2 Placing Colorbars",
    "text": "2.2 Placing Colorbars\nColorbars indicate the quantitative extent of image data. Placing in a figure is non-trivial because room needs to be made for them. The simplest case is just attaching a colorbar to each axes:1.\n1 See the Matplotlib Gallery to explore colorbars further\n\nCode\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, axs = plt.subplots(2, 2)\nfig.set_size_inches(20, 8)\ncmaps = ['RdBu_r', 'viridis']\nfor col in range(2):\n    for row in range(2):\n        ax = axs[row, col]\n        pcm = ax.pcolormesh(\n          np.random.random((20, 20)) * (col + 1),\n          cmap=cmaps[col]\n        )\n        fig.colorbar(pcm, ax=ax)\nplt.show()\n\n\n\n\n\n\n\n\n\n\n2.2.1 Supuestos para el Salario\nSe asume un valor monetario por hora de trabajo de $25.000 COP/hora, definido según parámetros del mercado laboral colombiano, Con este valor se puede estimar el costo del salario que debe pagarse al viajante por ir desde la ciudad \\(i\\) a la ciudad \\(j\\), mediante la siguiente expresión:\n\\(\\text{Costo del salario del viajante}_{ij} = V_h \\cdot T_{ij} \\tag{1}\\)\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  }
]